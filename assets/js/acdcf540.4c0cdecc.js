"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9683],{9892:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var i=n(4848),t=n(8453);const a={},l="2.9 Working with Views (HandsOn)",r={id:"Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.9 Working with Views",title:"2.9 Working with Views (HandsOn)",description:"- [ ] In this notebook, we will create and explore views",source:"@site/docs/Databricks Certified Data Engineer Associate - Preparation/2. Databricks Lakehouse Platform/2.9 Working with Views.md",sourceDirName:"Databricks Certified Data Engineer Associate - Preparation/2. Databricks Lakehouse Platform",slug:"/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.9 Working with Views",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.9 Working with Views",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.8 Views",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.8 Views"},next:{title:"3.1 Querying Files",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/ELT with Spark SQL and Python/3.1 Querying Files"}},c={},o=[{value:"How to create a temporary view",id:"how-to-create-a-temporary-view",level:2},{value:"How to create a global table",id:"how-to-create-a-global-table",level:2},{value:"How tables and views are persisted across multiple sessions",id:"how-tables-and-views-are-persisted-across-multiple-sessions",level:2}];function d(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"29-working-with-views-handson",children:"2.9 Working with Views (HandsOn)"}),"\n",(0,i.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In this notebook, we will create and explore views",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We are going to first create one of each type of views",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We start by creating a table of data to be used in this demonstration",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We are creating a table called smartphones. That has ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"id"})}),", ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"name"})}),", and the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"brand"})})," of the phone and the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"release"})})," year",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We are inserting some data in this table"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"CREATE TABLE IF EXISTS smartphones (\n    id INT, \n    name STRING,\n    brand STRING,\n    year INT\n)\n\nINSERT INTO smartphones \nVALUES (\n    1, 'iPhone 14', 'Apple', 2022\n),\n(\n    2, 'iPhone 13', 'Apple', 2021\n),\n(\n    3, 'iPhone 6', 'Apple', 2013\n),\n(\n    4, 'iPad Air', 'Apple', 2013\n),\n(\n    5, 'Galaxy S22', 'Samsung', 2022\n),\n(\n    6, 'Galaxy Z Fold', 'Samsung', 2022\n),\n(\n    7, 'Galaxy S9', 'Samsung', 2016\n),\n(\n    8, '12 Pro', 'Xiaomi', 2022\n),\n(\n    9, 'Redmi 11T Pro', 'Xiaomi', 2022\n),\n(\n    10, 'Redmi Note 11', 'Xiaomi', 2021\n)\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We can check the created table in the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"Data Explorer"})}),(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We can use the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," command to show the list of tables and views as well",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","As we can see here, we have one table called ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"smartphones"})})," in the default database",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us now create a stored view that shows only Apple's phones",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we use the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"CREATE VIEW"})})," statement followed by the view name",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In our case, it called ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"view_apple_phones"})})," and with the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"AS"})})," keyword, we specify our logical query"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",metastring:"{1-2}",children:"CREATE VIEW view_apple_phones\nAS SELECT *\nFROM smartphones\nWHERE brand = 'Apple'\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we are selecting from smartphone table all records having a brand equal Apple",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us now query our view",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We use the standard ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SELECT"})})," statement just as if it were a table"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM view_apple_phones;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Each time a view is queried, the underlying logical query of the view is executed against the table",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," command again"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We see that the view has been persisted to the default database. And of course it is not a temporary object",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.p,{children:"We can confirm this also from the Data Explorer."})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"how-to-create-a-temporary-view",children:"How to create a temporary view"}),"\n",(0,i.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us now create a temporary view",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The syntax is very similar but we add a ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"TEMPORARY"})})," keyword or simply a TEMP keyword",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The logical query of this view is simply retrieving the unique list of the brands in our smartphones table"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",metastring:"{1}",children:"CREATE TEMP VIEW temp_view_phones_brands\nAS SELECT DISTINCT brand\nFROM smartphones;\n\nSELECT * FROM temp_view_phones_brands\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here is the list of brands retrieved by the temporary view",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLE"})})," command again",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here, we see that the temporary view has been added to the list",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"isTemporary"})})," column shows that this view is indeed a temporary object. And since it is temporary, it is not persisted to any database",(0,i.jsx)("br",{})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"how-to-create-a-global-table",children:"How to create a global table"}),"\n",(0,i.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We create a global temporary view",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We simply add the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"GLOBAL"})})," keyword to the command",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Our global temporary view is called ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp_view_latest_phones"})}),", since the logical query here is retrieving all the smartphones from our table that has a releasing year newer than 2020 and we order the result in descending order, to show first the most recent phones",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",metastring:"{1}",children:"CREATE GLOBAL TEMP VIEW global_temp_view_latest_phones\nAS SELECT * FROM smartphones\nWHERE year > 2020 ORDER BY year DESC;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","To query a global temporary view in a select statement, we need to use the global database qualifier, which is in fact a temporary database in the cluster"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",metastring:"{1}",children:"SELECT * FROM global_temp.global_temp_view_latest_phones;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us review one last time the database table and views"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Our global temporary view is not listed here as it is tied to the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp"})})," database",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","To show tables and views in the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp"})})," database. We use the command SHOW TABLES IN and we specify the database, in our case, it's ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp"})})]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES IN global_temp;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here, we can see the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp_view_latest_phones"})}),", which is tied to the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp"})})," database"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["Since our temp_view_phones_brands is not tied to any database, it is usually shown with every ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," command"]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"how-tables-and-views-are-persisted-across-multiple-sessions",children:"How tables and views are persisted across multiple sessions"}),"\n",(0,i.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We are going to create a new notebook, which means a new ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SparkSession"})}),", and explore how our created views will behave there",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In this new ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SparkSession"})}),". let us first run the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," command"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The result here confirms that the table smartphones, of course, still exist",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","As expected, the stored view of Apple phones still exist in this new session. However, the temporary view of the brand phones does not exist",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us go back to the previous notebook and rerun the ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," command"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","All these three tables and views from this old session are still here",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us go back to the new notebook",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Temporary views are not accessible, for example, from another notebook",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Or after detaching and re-attaching a notebook to a cluster or after installing a Python package, which in turn, restarts the Python interpreter, or simply after restarting the cluster",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","What about the global temporary view?",(0,i.jsx)("br",{})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run the command ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"SHOW TABLES"})})," IN ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"global_temp"})})]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SHOW TABLES IN global_temp;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Our global temporary view still exists"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.p,{children:"In fact, as long as the cluster in running, the database global_temp persist, and any notebook attached to the cluster can access its global temporary views"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We can see this in action by querying this global temp view in this session"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM global_temp.temp_view_latest_phone;\n"})})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.input,{type:"checkbox",disabled:!0})," ","If you were to restart the cluster, this statement would fail because the view will no longer exist",(0,i.jsx)("br",{})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var i=n(6540);const t={},a=i.createContext(t);function l(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);
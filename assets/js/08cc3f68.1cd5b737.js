"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2820],{7312:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(4848),a=s(8453);const i={},r="2.6 Lab \u2013 Application connecting to Azure",o={id:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Basics/2.06 Lab \u2013 Application connecting to Azur",title:"2.6 Lab \u2013 Application connecting to Azure",description:"- [ ] What we have done so far is, when it comes on to our prior chapters, we have deployed an Azure storage account",source:"@site/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/2. Design and implement data storage \u2013 Basics/2.06 Lab \u2013 Application connecting to Azur.md",sourceDirName:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/2. Design and implement data storage \u2013 Basics",slug:"/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Basics/2.06 Lab \u2013 Application connecting to Azur",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Basics/2.06 Lab \u2013 Application connecting to Azur",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.5 Lab  Azure SQL Databases",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Basics/2.05 Lab  Azure SQL Databases"},next:{title:"2.10 Different File Formats",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Basics/2.10 Different File Formats"}},c={},l=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"26-lab--application-connecting-to-azure",children:"2.6 Lab \u2013 Application connecting to Azure"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","What we have done so far is, when it comes on to our prior chapters, we have deployed an Azure storage account",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","With the storage account, we are now storing our images",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We have deployed an Azure SQL database where we are storing the information that was available in our ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"data.csv"})})," file when it came onto our program",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","What I have done is, I have now made a change, or basically made changes, onto the sqlapp program",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Instead of the sqlapp program now referencing the images locally with the program itself, or even that data.csv file, it will now connect onto our Azure SQL database, fetch the information, and remember the rows in the Azure SQL database, refer onto the images within our storage account",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","The program is available as a zip file as a resource to this chapter",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Please go ahead and download the zip file",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","From within Visual Studio, go onto ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"File"})})," and click on opening a project or a solution",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Go onto my tmp4 folder, and open up the solution",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","If I go onto ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"wwwroot"})}),", you can see I don't have my images folder in place, and I don't have my ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"data.csv"})})," file",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","If I go onto my course service, this is where we are actually making a connection onto that particular SQL database",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","I am using a SELECT statement to select the information from the course table, and then displaying all the information accordingly",(0,t.jsx)("br",{})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"{28} ",children:'using sqlapp.Models;\nusing System.Data.SqlClient;\n\nnamespace sqlapp.Services\n{\n\n    // This service will interact with our Product data in the SQL database\n    public class CourseService\n    {\n        private static string db_source = "dbserver200020.database.windows.net";\n        private static string db_user = "sqladmin";\n        private static string db_password = "sqlpassword@123";\n        private static string db_database = "appdb";\n\n        private SqlConnection GetConnection()\n        {\n            \n            var _builder = new SqlConnectionStringBuilder();\n            _builder.DataSource = db_source;\n            _builder.UserID = db_user;\n            _builder.Password = db_password;\n            _builder.InitialCatalog = db_database;\n            return new SqlConnection(_builder.ConnectionString);\n        }\n        public List<Course> GetCourses()\n        {\n            List<Course> _course_lst = new List<Course>();\n            string _statement = """\n            SELECT \n                CourseID,\n                ExamImage,\n                CourseName,\n                rating \n            FROM Course\n            """;\n            SqlConnection _connection = GetConnection();\n            \n            _connection.Open();\n            \n            SqlCommand _sqlcommand = new SqlCommand(\n                _statement, \n                _connection\n            );\n            \n            using (SqlDataReader _reader = _sqlcommand.ExecuteReader())\n            {\n                while (_reader.Read())\n                {\n                    Course _course = new Course()\n                    {\n                        CourseID = _reader.GetInt32(0),\n                        ExamImage = _reader.GetString(1),\n                        CourseName = _reader.GetString(2),\n                        Rating = _reader.GetDecimal(3)\n                    };\n\n                    _course_lst.Add(_course);\n                }\n            }\n            _connection.Close();\n            return _course_lst;\n        }\n\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","What we need to change here is the password",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:'I\'d mentioned the password as "sqlpassword@8123"'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'The name of my database is "appdb"',(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'What is our server name? So, let me go onto "All resources". I will go onto my SQL database. For the SQL database, you have the server name here',(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","I will just copy this onto the clipboard, place it here. ",(0,t.jsx)("br",{})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"{10-13} ",children:'using sqlapp.Models;\nusing System.Data.SqlClient;\n\nnamespace sqlapp.Services\n{\n\n    // This service will interact with our Product data in the SQL database\n    public class CourseService\n    {\n        private static string db_source = "dbserver200020.database.windows.net";\n        private static string db_user = "sqladmin";\n        private static string db_password = "sqlpassword@8123";\n        private static string db_database = "appdb";\n\n        private SqlConnection GetConnection()\n        {\n            \n            var _builder = new SqlConnectionStringBuilder();\n            _builder.DataSource = db_source;\n            _builder.UserID = db_user;\n            _builder.Password = db_password;\n            _builder.InitialCatalog = db_database;\n            return new SqlConnection(_builder.ConnectionString);\n        }\n        public List<Course> GetCourses()\n        {\n            List<Course> _course_lst = new List<Course>();\n            string _statement = "SELECT CourseID,ExamImage,CourseName,rating from Course";\n            SqlConnection _connection = GetConnection();\n            \n            _connection.Open();\n            \n            SqlCommand _sqlcommand = new SqlCommand(_statement, _connection);\n            \n            using (SqlDataReader _reader = _sqlcommand.ExecuteReader())\n            {\n                while (_reader.Read())\n                {\n                    Course _course = new Course()\n                    {\n                        CourseID = _reader.GetInt32(0),\n                        ExamImage = _reader.GetString(1),\n                        CourseName = _reader.GetString(2),\n                        Rating = _reader.GetDecimal(3)\n                    };\n\n                    _course_lst.Add(_course);\n                }\n            }\n            _connection.Close();\n            return _course_lst;\n        }\n\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","With all of our data artifacts in place, I will again, run this program locally",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We are getting the same information. The only difference here is, when it comes on to the information about the course name, the rating and the course ID, all of this is now coming in from the table that is stored in the Azure SQL database",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","These images are coming up from the Azure storage account",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Go onto all resources. Since I don't need these resources anymore, we can recreate these resources again",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'I will choose all of my resources, and hit on the "delete" button',(0,t.jsx)("br",{})]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
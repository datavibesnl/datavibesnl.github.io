"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1172],{6194:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=t(4848),a=t(8453);const i={},r="3.10 Lab \u2013 TSQL \u2013 HAVING clause",o={id:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.10 Lab \u2013 TSQL \u2013 HAVING clause",title:"3.10 Lab \u2013 TSQL \u2013 HAVING clause",description:"- [ ] When you start using aggregate functions from within your queries, you can use the WHERE clause to filter on the information that is first of all returned in the results set",source:"@site/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL/3.10 Lab \u2013 TSQL \u2013 HAVING clause.md",sourceDirName:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL",slug:"/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.10 Lab \u2013 TSQL \u2013 HAVING clause",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.10 Lab \u2013 TSQL \u2013 HAVING clause",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.4 Lab  Setting up SQL Server Managemen",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.04 Lab  Setting up SQL Server Managemen"},next:{title:"3.11 Quick Review on Primary and Foreign",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.11 Quick Review on Primary and Foreign"}},l={},c=[];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"310-lab--tsql--having-clause",children:"3.10 Lab \u2013 TSQL \u2013 HAVING clause"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","When you start using aggregate functions from within your queries, you can use the WHERE clause to filter on the information that is first of all returned in the results set",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","After the GROUP BY clause, once you have the results set in place, after the filter condition has been applied from the WHERE clause, and we use a GROUP BY clause to our GROUP BY Color, let us say in this particular case, you want to filter down further",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We can actually make use of the HAVING clause. For example, I only want to show information where the COUNT of Color is greater than 10",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","For example, I only want to show information where the COUNT of Color is greater than 10",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We are trying to filter the information even further using the HAVING clause",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT Color, COUNT(ProductID) FROM SalesLT.Product\nWHERE Color IS NOT NULL\nGROUP BY Color\nHAVING COUNT(Color) > 10\n"})})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","The WHERE clause can be used to filter the information that is being returned from the table from the server",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Once we have the GROUP BY condition, in place, if you want to filter the information even further when it comes on to what has been returned by the aggregate function, we can use the HAVING clause accordingly",(0,s.jsx)("br",{})]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
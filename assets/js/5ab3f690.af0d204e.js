"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5015],{5910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(4848),a=n(8453);const i={},r="3.13 Lab \u2013 TSQL \u2013 Table Joins",o={id:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.13 Lab \u2013 TSQL \u2013 Table Joins",title:"3.13 Lab \u2013 TSQL \u2013 Table Joins",description:"- [ ] The JOIN clause can be use to join information from different tables",source:"@site/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL/3.13 Lab \u2013 TSQL \u2013 Table Joins.md",sourceDirName:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL",slug:"/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.13 Lab \u2013 TSQL \u2013 Table Joins",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.13 Lab \u2013 TSQL \u2013 Table Joins",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.12 Lab \u2013 TSQL \u2013 Creating Tables with K"},next:{title:"3.5 Lab  TSQL  SELECT clause",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.5 Lab  TSQL  SELECT clause"}},l={},c=[];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"313-lab--tsql--table-joins",children:"3.13 Lab \u2013 TSQL \u2013 Table Joins"}),"\n",(0,s.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","The JOIN clause can be use to join information from different tables",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Since we have relationship between the tables, more often than not, you might want to get information between those tables and we can make use of the JOIN clause for this particular purpose",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","If you want to delete the tables or you want to drop the tables that we have created in the earlier chapter, we can use the DROP command",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"DROP TABLE Course\n"})})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","I am going to get an error because it clearly tells us that it is being referenced, has a foreign key constraint",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","We first have to drop the Orders table",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"DROP TABLE Orders\n"})})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Then we can remove now the course table and remove the customer table",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","I am going to put in some commands here that does the join between different tables that we have in our sample database that we had seen early on",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","If I go on tables and if I hit on refresh so we don't see those tables anymore. I have now put in some SELECT statements that make use of the JOIN clause",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","I have now put in some SELECT statements that make use of the JOIN clause. I am trying to join the information from 2 tables",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","When I was going through these tables, I found out that the product ID in the product table is also, there is a reference in the SalesOrderDetail table",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","I want to get the information in the SalesOrderDetail table based on the product ID that is defined in the product table",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","I am using the JOIN clause to join the information between the product table and the SalesOrderDetail table based on the product ID and I am selecting the product ID information, the list price, the order quantity, and the line total",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT \n    SalesLT.Product.ProductID,\n    ListPrice,\n    OrderQty,\n    LineTotal\nFROM SalesLT.Product\nJOIN SalesLT.SalesOrderDetail\nON SalesLT.Product.ProductID = SalesLT.SalesOrderDetail.ProductID\n"})})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","We can also perform some computation on the columns itself",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Here I am multiplying the ListPrice and the order quantity minus the line total and I am presenting a name of discount amount for this particular column, this new generated column, if I take this and here on execute",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT \n    SalesLT.Product.ProductID,\n    ListPrice,\n    OrderQty,\n    LineTotal,\n    ((ListPrice * OrderQty) - LineTotal) AS 'Discount Amount'\nFROM SalesLT.Product\nJOIN SalesLT.SalesOrderDetail\nON SalesLT.Product.ProductID = SalesLT.SalesOrderDetail.ProductID\n"})})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.input,{type:"checkbox",disabled:!0})," ","If you only want to get the information where the order quantity is greater than 10, we can get the results as well",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT \n    SalesLT.Product.ProductID,\n    ListPrice,\n    OrderQty,\n    LineTotal,\n    ((ListPrice * OrderQty) - LineTotal) AS 'Discount Amount'\nFROM SalesLT.Product\nJOIN SalesLT.SalesOrderDetail\nON SalesLT.Product.ProductID = SalesLT.SalesOrderDetail.ProductID\nWHERE OrderQty > 10\n"})})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6153],{9757:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(4848),r=s(8453);const i={},a="3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",o={id:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",title:"3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",description:"- [ ] When it comes on to creating tables with primary keys and foreign keys, I have the SQL script in place that creates 3 tables",source:"@site/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL/3.12 Lab \u2013 TSQL \u2013 Creating Tables with K.md",sourceDirName:"DP203 \u2013 Data Engineering on Microsoft Azure 2023/3. Design and implement data storage \u2013 Overview on TransactSQL",slug:"/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.12 Lab \u2013 TSQL \u2013 Creating Tables with K",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.11 Quick Review on Primary and Foreign",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.11 Quick Review on Primary and Foreign"},next:{title:"3.13 Lab \u2013 TSQL \u2013 Table Joins",permalink:"/docs/DP203 \u2013 Data Engineering on Microsoft Azure 2023/Design and implement data storage \u2013 Overview on TransactSQL/3.13 Lab \u2013 TSQL \u2013 Table Joins"}},c={},l=[];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"312-lab--tsql--creating-tables-with-k",children:"3.12 Lab \u2013 TSQL \u2013 Creating Tables with K"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","When it comes on to creating tables with primary keys and foreign keys, I have the SQL script in place that creates 3 tables",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A Customer table that has the customer ID and the customer name. I define the primary key as the customer ID"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"When we create the customer table, the customer ID is going to behave as the primary key"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Customer (\n    CustomerID VARCHAR(100) NOT NULL,\n    CustomerName VARCHAR(1000),\n    PRIMARY KEY (CustomerID)\n)\n"})})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"I am creating another table known as a course table that has the course ID and the course name and the price, and here the primary key is a course ID itself"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Course (\n    CourseID VARCHAR(100) NOT NULL,\n    CourseName VARCHAR(1000),\n    Price REAL,\n    PRIMARY KEY (CourseID)\n)\n"})})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Creating an orders table, which has the order ID, the course ID and the customer ID and discount percentage or discount percent. Here, I am saying that there's a foreign key wherein we want to reference the customer ID from the customer table"}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"The customer ID column here will actually reference the customer ID in the customer table. And the course ID actually references the course ID in the course table"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","I can define here a primary key for the orders table and this can be our order ID",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Orders (\n    OrderID VARCHAR(100) NOT NULL,\n    CourseID VARCHAR(100),\n    CustomerID VARCHAR(100),\n    Discountpercent INT,\n    PRIMARY KEY (OrderID)\n    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),\n    FOREIGN KEY (CourseID) REFERENCES Course(CourseID)\n)\n"})})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We can create these tables actually within our appdb database itself",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","In this query window which I already have open, I will paste in all of the statements to create these tables",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","If you click on tables here and hit on the refresh button, we will see our course table, our customer table and the orders table",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Insert some values into the customer table. So, I am inserting 3 rows of information. I have the customer ID and the customer name",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'INSERT INTO Customer(\n    CustomerID,\n    CustomerName\n) VALUES (\n    "C1",\n    "UserA"\n);\n\nINSERT INTO Customer (\n    CustomerID,\n    CustomerName\n) VALUES (\n    "C2",\n    "UserB"\n);\n\nINSERT INTO Customer (\n    CustomerID,\n    CustomerName\n) VALUES (\n    "C3",\n    "UserC"\n);\n'})})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Let us insert some rows into the course table. So, again, I am inserting 3 rows of information",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'INSERT INTO Course (\n    CourseID, \n    CourseName, \n    Price\n) VALUES (\n    "D1",\n    "AZ-900",\n    99.99\n);\n\nINSERT INTO Course (\n    CourseID,\n    CourseName,\n    Price\n) VALUES (\n    "D2",\n    "DP-900",\n    100.99\n);\n\nINSERT INTO Course (\n    CourseID,\n    CourseName,\n    Price\n) VALUES (\n    "D3",\n    "AZ-104",\n    89.99\n);\n'})})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","We can insert the information into the orders table",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","In terms of the orders table, I am ensuring that I have a course ID that is defined in the course table and a customer ID that is defined in the customer table",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"INSERT INTO Orders (\n    OrderID,\n    CourseID,\n    CustomerID,\n    Discountpercent\n) VALUES (\n    'O1',\n    'D2',\n    'C1',\n    90\n);\n\nINSERT INTO Orders (\n    OrderID,\n    CourseID,\n    CustomerID,\n    Discountpercent\n) VALUES (\n    'O2',\n    'D1',\n    'C2',\n    50\n);\n\nINSERT INTO Orders (\n    OrderID,\n    CourseID,\n    CustomerID,\n    Discountpercent\n) VALUES (\n    'O3',\n    'D3',\n    'C3',\n    60\n)\n"})})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","If I try to insert a row of information into the orders table where I have a unique OrderID, I do have a courseID that is defined as D3",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","This is available in the course table, but I am putting a customer ID of C4",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","The customer ID is not defined in the customer table. If I try to insert this record into the table, I am going to get an error",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","It is a foreign key constraint error, because I don't have that information defined in the customer table",(0,t.jsx)("br",{})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2773],{2181:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var n=i(4848),t=i(8453);const a={},l="6.3 Unity Catalog",c={id:"Databricks Certified Data Engineer Associate - Preparation/Data Governance/6.3 Unity Catalog",title:"6.3 Unity Catalog",description:"- [ ] In this lecture, we will see an overview of Unity Catalog, which is the new governance solution of Databricks platform",source:"@site/docs/Databricks Certified Data Engineer Associate - Preparation/6. Data Governance/6.3 Unity Catalog.md",sourceDirName:"Databricks Certified Data Engineer Associate - Preparation/6. Data Governance",slug:"/Databricks Certified Data Engineer Associate - Preparation/Data Governance/6.3 Unity Catalog",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Data Governance/6.3 Unity Catalog",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Databricks Certified Data Engineer Associate - Preparation/6. Data Governance/6.3 Unity Catalog.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"6.2 Managing Permissions (Hands On)",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Data Governance/6.2 Managing Permissions (Hands On)"},next:{title:"7.1 Certification Overview",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Certification Overview/7.1 Certification Overview"}},r={},o=[{value:"What is Unity Catalog?",id:"what-is-unity-catalog",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Unity Catalog 3-level namespace",id:"unity-catalog-3-level-namespace",level:2},{value:"Unity Catalog Hierarchy",id:"unity-catalog-hierarchy",level:2},{value:"Unity Catalog Identities",id:"unity-catalog-identities",level:2},{value:"Identity Federation",id:"identity-federation",level:2},{value:"Privileges",id:"privileges",level:2},{value:"Security Model",id:"security-model",level:2},{value:"Accessing legacy Hive metastore",id:"accessing-legacy-hive-metastore",level:2},{value:"Features",id:"features",level:2}];function d(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"63-unity-catalog",children:"6.3 Unity Catalog"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In this lecture, we will see an overview of Unity Catalog, which is the new governance solution of Databricks platform",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"what-is-unity-catalog",children:"What is Unity Catalog?"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(s.strong,{children:"Unity Catalog"})," is a centralized governance solution across all your workspaces on any cloud",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","It unifies governance for all data and AI assets in your Lakehouse including:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Files;"}),"\n",(0,n.jsx)(s.li,{children:"Tables;"}),"\n",(0,n.jsx)(s.li,{children:"Machine learning models;"}),"\n",(0,n.jsx)(s.li,{children:"Dashboards"}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"These can be simply achieved using SQL language"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","With Unity Catalog, you define your ",(0,n.jsx)(s.strong,{children:"data access rules"})," once across multiple workspaces and clouds"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"architecture",children:"Architecture"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Before Unity Catalog, users and groups were defined per workspace",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Access control was managed via the Hive metastore within the workspace",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog sits out of the workspace and accessed via a user interface called the Account Console",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Users and the groups for Unity Catalog are managed through this account console and assign it to one or more workspaces",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Metastores are likewise separated out of the workspaces and managed through the account console where they can be assigned to the workspaces",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","A Unity Catalog metastore can be assigned to more than one workspace, enabling multiple workspaces to share the same DBFS storage and the same access control lists"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"unity-catalog-3-level-namespace",children:"Unity Catalog 3-level namespace"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We saw previously the traditional two-level namespaces used to address tables within the schemas",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog introduces a third level, which is catalogs",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us understand better the hierarchy of Unity Catalog",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The ",(0,n.jsx)(s.strong,{children:"metastore"})," is the top level logical container in Unity Catalog",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","It represents metadata, that is, information about the objects being managed by the metadata, as well as the access control list that govern access to those objects",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In a metastore, you have ",(0,n.jsx)(s.strong,{children:"catalog"}),", which is the top level container for data objects in Unity Catalog, and forms the first part of the three level namespace we just saw"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"Don't confuse Unity Catalog metastore with the Hive metastore"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The ",(0,n.jsx)(s.strong,{children:"Hive store"})," is the default metastore linked to each Databricks workspace"]}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsxs)(s.p,{children:["While it may seem functionality similar to a Unity Catalog metastore, Unity Catalog metastores offers improved security and advanced features",(0,n.jsx)("br",{})]}),(0,n.jsx)(s.p,{children:"Unity Catalog metastore can have as many catalogs as desired"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"unity-catalog-hierarchy",children:"Unity Catalog Hierarchy"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Catalogs contain ",(0,n.jsx)(s.strong,{children:"schemas"}),(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","A ",(0,n.jsx)(s.strong,{children:"schema"}),", also known as ",(0,n.jsx)(s.strong,{children:"database"}),", is the second part of the three-level namespace",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Schemas usually contain data assets like ",(0,n.jsx)(s.strong,{children:"tables"}),", ",(0,n.jsx)(s.strong,{children:"views"})," and ",(0,n.jsx)(s.strong,{children:"functions"}),", forming the third part of the three-level namespace",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","You need to catalog also support authentication to the underlying cloud storage through Storage Credentials",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(s.strong,{children:"Storage Credentials"})," apply to an entire storage container",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(s.strong,{children:"External Locations"})," represent the storage directories within a cloud storage container",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In addition, Unity Catalog adds ",(0,n.jsx)(s.strong,{children:"Shares and Recipients"})," which are related to Delta Sharing",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(s.strong,{children:"Shares"})," are collections of tables shared with one or more recipient"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"Data sharing is out of scope for this course"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"unity-catalog-identities",children:"Unity Catalog Identities"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In Unity Catalog, we have three types of identities ",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Users"})})," are individual physical users which are uniquely identified by their email addresses"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"A user can have an admin role to perform several administrative tasks important to Unity Catalog, such as managing and assigning metastores to workspaces and managing other users"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"service principle"})})," is an individual identity for use with automated tools and applications"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Service principles are uniquely identified by Application ID"}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"Like users, service principles can have an admin role which allow them to programmatically carry out administrative tasks"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["We have ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Groups"})})," that collect users and service principles into a single entity"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Groups can be nested with other groups"}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"For example, a parent group called Employees can contain two inner groups: HR and Finance groups"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"identity-federation",children:"Identity Federation"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Databricks identities exist at two levels: at ",(0,n.jsx)(s.strong,{children:"account-level"})," and at ",(0,n.jsx)(s.strong,{children:"workspace-level"}),(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog supports a feature called ",(0,n.jsx)(s.strong,{children:"Identity Federation"}),", where identities are simply created once in the accounts console",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","They can be assigned to one or more workspaces as needed",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Identity Federation eliminates the need to manually create and maintain copies of identities at workspace-levels"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"privileges",children:"Privileges"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog has ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"CREATE"})}),", ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"USAGE"})}),", ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"SELECT"})})," and ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"MODIFY"})})," privileges",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In addition, we have also privileges related to the underlying storage which are ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"READ FILES"})})," and ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"WRITE FILES"})})," which replace the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"ANY FILE"})})," privilege we saw previously with Hive metastore",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We have ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"EXECUTE"})})," privilege to allow executing user defined functions"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"security-model",children:"Security Model"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog uses a different security model than Hive metastores for granting privileges",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","There are different privileges types, and extra securable objects and principles",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We continue to use ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"GRANT"})})," statement in order to give a privilege on a secure object to a principle"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"GRANT Privilege ON Securable_Object \nTO Principal\n"})})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"accessing-legacy-hive-metastore",children:"Accessing legacy Hive metastore"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog is additive, this means that your legacy Hive metastore is still accessible once Unity Catalog is enabled",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Regardless of the Unity Catalog metastore assigned to the workspace, the catalog named hive_metastore always provide access to the Hive metastore local to that workspace"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"features",children:"Features"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog also has a built-in data search and discovery",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog also provides automated lineage where you can identify the origin of your data and where it is used across all data types like tables, notebooks, workflows and dashboards",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Unity Catalog unifies existing legacy catalogs"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"There is no hard migration needed when enabling Unity Catalog"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In order to access the account console, you can log in as an account administrator via this link"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sh",children:"https://accounts.cloud.databricks.com\n"})})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>c});var n=i(6540);const t={},a=n.createContext(t);function l(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);
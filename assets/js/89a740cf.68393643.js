"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6801],{3597:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var n=t(4848),a=t(8453);const i={},l="2.6 Databases and Tables on Databricks (Hands On)",r={id:"Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.6 Databases and Tables on Databricks (",title:"2.6 Databases and Tables on Databricks (Hands On)",description:"- [ ] In this notebook, we will work with databases and tables on Databricks",source:"@site/docs/Databricks Certified Data Engineer Associate - Preparation/2. Databricks Lakehouse Platform/2.6 Databases and Tables on Databricks (.md",sourceDirName:"Databricks Certified Data Engineer Associate - Preparation/2. Databricks Lakehouse Platform",slug:"/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.6 Databases and Tables on Databricks (",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.6 Databases and Tables on Databricks (",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2.5 Relational entities",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.5 Relational entities"},next:{title:"2.7 Set Up Delta Tables",permalink:"/docs/Databricks Certified Data Engineer Associate - Preparation/Databricks Lakehouse Platform/2.7 Set Up Delta Tables"}},d={},c=[{value:"How to create an external table",id:"how-to-create-an-external-table",level:2}];function o(e){const s={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"26-databases-and-tables-on-databricks-hands-on",children:"2.6 Databases and Tables on Databricks (Hands On)"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In this notebook, we will work with databases and tables on Databricks",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us first take a look on the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),". Here we can see the Hive metastore for this Databricks workspace"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"By default, it has a database called default"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us create some tables in this default database",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us create a tabled called ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"managed_default"})})," and insert some data"]}),"\n",(0,n.jsx)(s.admonition,{title:'"Example: Create a managed table"',type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"CREATE TABLE managed_default (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n);\r\n\r\nINSERT INTO managed_default\r\nVALUES (\r\n    3 INT, 2 INT, 1 INT\r\n)\n"})})}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:["It is a managed table since we are not specifying ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"LOCATION"})})," keywords"]})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","If we come back to the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),", we see that the table ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"managed_default"})})," has been created under the default database",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"DESCRIBE EXTENDED"})})," command on our table to see some metadata information"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DESCRIBE EXTENDED managed_default\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we see that there are 17 rows of metadata. Let us scroll to see two useful information about our table"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["The location. Here, we can see that our table is created under the default Hive metastore, which is ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"dbfs:/user/hive/warehouse"})})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["The type of the table is ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"MANAGED"})})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["It's a managed table since we didn't specify ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"LOCATION"})})," keyword during the creation of the table"]})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"how-to-create-an-external-table",children:"How to create an external table"}),"\n",(0,n.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us now create an external table under the default database",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","To create an external table, you need to simply to specify in the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"CREATE TABLE"})})," statement the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"LOCATION"})})," keyword followed by the path to where this table needs to be stored."]}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsxs)(s.p,{children:["In our case, we store this table under ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"/mnt/demo"})})," directory"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"CREATE TABLE managed_default (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n) LOCATION 'dbfs:/mnt/demo/external_default';\r\n\r\nINSERT INTO managed_default\r\nVALUES (\r\n    3 INT, 2 INT, 1 INT\r\n)\n"})})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us take a look on the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),". Here we can see that the table has been created in the hive metastore",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us now run ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"DESCRIBE EXTENDED"})})," on our external table"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DESCRIBE EXTENDED external_default\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we can see that this table is indeed an external table, and it is created in the specified location under /mnt/demo. Let us now see what will happen if we drop the managed table",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The table has been successfully deleted. Let us confirm this by checking the table directory"]}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sh",children:"%fs ls 'dbfs:/user/hive/warehouse/managed_default'\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DROP TABLE external_default\n"})})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In the hive metastore, we see that both tables are no longer exist",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsx)(s.p,{children:"However, if we check the table directory. We see that the table directory and the data files are still there"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sh",children:"%fs ls 'dbfs:/mnt/demo/external_default'\n"})})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Since this table is created outside the database directory, the underlying data is not managed by Hive. So, dropping the table will not delete the underlying data files as we see here",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In addition to the default database, we can also create extra databases. To do so we can use either ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"CREATE SCHEMA"})})," syntax or ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"CREATE DATABASE"})})," syntax, which is actually the same"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"CREATE SCHEMA new_default\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we can see that the new database has been created",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"DESCRIBE DATABASE EXTENDED"})})," on our database to see some metadata information"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DESCRIBE DATABASE EXTENDED new_default\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we can see that the database itself is created under the default Hive warehouse directory",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Notice that the database has .db extension to differentiate it from other table folders in the same directory"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us create some tables in this new database",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here we will create also a managed table and an external table"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"USE new_default;\r\n\r\n/* managed table */\r\nCREATE TABLE managed_new_default (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n);\r\n\r\nINSERT INTO managed_new_default VALUES (\r\n    3 INT, 2 INT, 1 INT\r\n);\r\n\r\n/* external table */\r\nCREATE TABLE external_new_default (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n) LOCATION 'dbfs:/mnt/demo/external_new_default';\r\n\r\nINSERT INTO external_new_default VALUES (\r\n    3 INT, 2 INT, 1 INT\r\n);\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","To create a new table in a database different then the default one, you need to specify the database tob e used through the USE keywords",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us run this command. In the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),", we see that the two tables have been created"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DESCRIBE EXTENDED managed_new_default\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Here, we can see that this new table is indeed a managed table created in its database folder under the default hive warehouse directory",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The second table where we use the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"LOCATION"})})," keyword has been defined as external table under ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"/mnt/demo"})})," location",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","We can simply drop those two tables to see again that the table directory and the data files of the managed table have been all removed"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DROP TABLE managed_new_default;\r\nDROP TABLE external_new_default;\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),", we see that both tables have been dropped from the new database. However, as expected, the table directory and the data files of the external table are still there",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Let us finally create a database in a custom location outside of the Hive directory"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"CREATE SCHEMA custom\r\nLOCATION 'dbfs:/Shared/schemas/custom.db'\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","As we can see in the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"Data Explorer"})}),", the database has been really created in the hive metastore. However, if we run the ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"DESCRIBE DATABASE EXTENDED"})}),", we see that it is created in the custom location we have defined during the creation of the database, and it is different from the default hive directory"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"DESCRIBE DATABASE EXTENDED custom\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","You can normally create managed and external tables in this database"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"USE custom;\r\n\r\n/* managed table */\r\nCREATE TABLE managed_custom (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n);\r\n\r\nINSERT INTO managed_custom VALUES (\r\n    3 INT, 2 INT, 1 INT\r\n);\r\n\r\n/* external table */\r\nCREATE TABLE external_custom (\r\n    width INT,\r\n    length INT,\r\n    height INT\r\n) LOCATION 'dbfs:/mnt/demo/external_custom';\r\n\r\nINSERT INTO external_custom VALUES (\r\n    3 INT, 2 INT, 1 INT\r\n); \r\n\n"})})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","In hive metastore, we can see the tables of our custom location",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The managed_custom table is indeed a managed table since it is created in the database folder located in a custom location",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The second table is an external table since it is created outside the database directory",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","By dropping the two tables, we can see that they have successfully deleted from the hive metastore",(0,n.jsx)("br",{})]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{className:"task-list-item",children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.input,{type:"checkbox",disabled:!0})," ","The managed table directory and the data files are no longer exist in the database directory located in the custom location. While the external table's directory, and its data file are not deleted and are still in this external location outside the database directory"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>r});var n=t(6540);const a={},i=n.createContext(a);function l(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);